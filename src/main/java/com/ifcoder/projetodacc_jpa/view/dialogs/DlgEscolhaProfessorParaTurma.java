package com.ifcoder.projetodacc_jpa.view.dialogs;

import com.ifcoder.projetodacc_jpa.controller.ProfessorController;
import com.ifcoder.projetodacc_jpa.model.entities.Professor;
import com.ifcoder.projetodacc_jpa.model.entities.Turma;
import javax.swing.JOptionPane;

/**
 *
 * @author jose
 */
public class DlgEscolhaProfessorParaTurma extends javax.swing.JDialog {

    Turma turma;
    Professor itemEscolhido;
    ProfessorController profController;
    

    public DlgEscolhaProfessorParaTurma(java.awt.Frame parent, boolean modal, Turma turma) {

        super(parent, modal);
        initComponents();
        
        this.profController = new ProfessorController();
        this.itemEscolhido = new Professor();
        this.turma = turma;

        this.profController.atualizarTabela(grdProfessores);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        splConteudo = new javax.swing.JSplitPane();
        panListaPessoas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblNome2 = new javax.swing.JLabel();
        edtNome = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        grdProfessores = new javax.swing.JTable();
        panEscolhido = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lblPessoaEscolhida = new javax.swing.JTextArea();
        btnAddItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Fira Sans", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Escolha um Profesor");

        splConteudo.setDividerLocation(420);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        lblNome2.setText("Filtrar (nome):");
        jPanel1.add(lblNome2);

        edtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtNomeKeyPressed(evt);
            }
        });
        jPanel1.add(edtNome);

        grdProfessores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        grdProfessores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grdProfessoresMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(grdProfessores);

        javax.swing.GroupLayout panListaPessoasLayout = new javax.swing.GroupLayout(panListaPessoas);
        panListaPessoas.setLayout(panListaPessoasLayout);
        panListaPessoasLayout.setHorizontalGroup(
            panListaPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListaPessoasLayout.createSequentialGroup()
                .addGroup(panListaPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                    .addGroup(panListaPessoasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panListaPessoasLayout.setVerticalGroup(
            panListaPessoasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panListaPessoasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );

        splConteudo.setLeftComponent(panListaPessoas);

        lblPessoaEscolhida.setEditable(false);
        lblPessoaEscolhida.setColumns(20);
        lblPessoaEscolhida.setRows(5);
        lblPessoaEscolhida.setBorder(javax.swing.BorderFactory.createTitledBorder("Item selecionado"));
        jScrollPane2.setViewportView(lblPessoaEscolhida);

        btnAddItem.setBackground(new java.awt.Color(0, 153, 51));
        btnAddItem.setText("Adicionar");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panEscolhidoLayout = new javax.swing.GroupLayout(panEscolhido);
        panEscolhido.setLayout(panEscolhidoLayout);
        panEscolhidoLayout.setHorizontalGroup(
            panEscolhidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panEscolhidoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(btnAddItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panEscolhidoLayout.setVerticalGroup(
            panEscolhidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panEscolhidoLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnAddItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        splConteudo.setRightComponent(panEscolhido);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(splConteudo))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(splConteudo)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        if (itemEscolhido == null) {
            int response = JOptionPane.showConfirmDialog(null,
                    "Nenhum item foi escolhido. Deseja continuar?",
                    "Confirm",
                    JOptionPane.OK_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.OK_OPTION) {
                dispose();
            }
        } else {
            this.turma.setProfessor(itemEscolhido);
            dispose();
        }
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void grdProfessoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grdProfessoresMouseClicked
        itemEscolhido = (Professor) this.getObjetoSelecionadoNaGrid();

        if (itemEscolhido == null) {
            JOptionPane.showMessageDialog(this, "Primeiro selecione um registro na tabela.");
        } else {
           lblPessoaEscolhida.setText(itemEscolhido.toString());
        }
    }//GEN-LAST:event_grdProfessoresMouseClicked

    private void edtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtNomeKeyPressed
        String nomeDigitado = edtNome.getText();
        if(!nomeDigitado.isEmpty())
            this.profController.atualizarTabela(grdProfessores, nomeDigitado);
        else
            this.profController.atualizarTabela(grdProfessores);
    }//GEN-LAST:event_edtNomeKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JTextField edtNome;
    private javax.swing.JTable grdProfessores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblNome2;
    private javax.swing.JTextArea lblPessoaEscolhida;
    private javax.swing.JPanel panEscolhido;
    private javax.swing.JPanel panListaPessoas;
    private javax.swing.JSplitPane splConteudo;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Retorna o objeto (classe) da linha selecionada na grid.
     *
     * Uso a estratégia do metodo getValueAt() la na TableModel, receber coluna
     * -1 e retornar o objeto ao inves de uma célula.
     *
     * @return
     */
    private Object getObjetoSelecionadoNaGrid() {
        int rowCliked = grdProfessores.getSelectedRow();
        Object obj = null;
        if (rowCliked >= 0) {
            obj = grdProfessores.getModel().getValueAt(rowCliked, -1);
        }
        return obj;
    }


}
